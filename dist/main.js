(()=>{"use strict";const e={validateNumber(e){const s=/^[0-9]+$/,a={isValid:s.test(e),message:[]};return a.isValid||(e||a.message.push("The number is required."),s.test(e)||a.message.push("The number must be a positive integer.")),a},validateFloatingPointNumber(e){const s=/[-+]?[0-9]+(\.?[0-9])*/,a={isValid:s.test(e),message:[]};return a.isValid||(e||a.message.push("The number is required."),s.test(e)||a.message.push("Enter a number.")),a},validateText(e){const s=/^[a-zA-Z]+(([' -][a-zA-Z ])?[a-zA-Z]*)*$/,a={isValid:s.test(e),message:[]};return a.isValid||(e||a.message.push("The field is required."),s.test(e)||a.message.push('Use letters and only one character each "-" and "\'" within a word.')),a},validateMinLength(e,s){const a=new RegExp(`^.{${s},}$`),t={isValid:a.test(e),message:[]};return t.isValid||(e||t.message.push("The field is required."),a.test(e)||t.message.push(`Enter ${s} or more characters.`)),t},validateMaxLength(e,s){const a=new RegExp(`^.{0,${s}}$`),t={isValid:a.test(e),message:[]};return t.isValid||(e||t.message.push("The field is required."),a.test(e)||t.message.push(`Enter ${s} characters or less.`)),t},validateMinMaxLength(e,s,a){const t=new RegExp(`^.{${s},${a}}$`),i={isValid:t.test(e),message:[]};return i.isValid||(e||i.message.push("The field is required."),t.test(e)||i.message.push(`Enter between ${s} and ${a} characters.`)),i},validateName(e){const s=/^[a-zA-Z]+(([' -][a-zA-Z ])?[a-zA-Z]*)*$/,a={isValid:s.test(e),message:[]};return a.isValid||(e||a.message.push("The name is required."),s.test(e)||a.message.push('Use letters, spaces and only one character each "-" and "\'" within a word.')),a},validateUsername(e){const s={isValid:/^[A-Za-z][A-Za-z0-9_]{4,14}$/.test(e),message:[]};return s.isValid||(e||s.message.push("The username is required."),/^.{5,15}$/.test(e)||s.message.push("The username must be between 5 and 15 characters."),/^[^A-Za-z][A-Za-z0-9_]/.test(e)&&s.message.push("The username must begin with a letter."),/[^A-Za-z0-9_]/.test(e)&&s.message.push("The username must only contain letters, numbers and underscores.")),s},validateEmail(e){const s=/^[\w.-]+@([\w-]+\.)+[\w-]{2,4}$/,a={isValid:s.test(e),message:[]};return a.isValid||(e||a.message.push("The email is required."),/@/.test(e)||a.message.push('The email must contain "@".'),s.test(e)||a.message.push("Enter a valid email.")),a},validatePassword(e){const s={isValid:/(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})/.test(e),message:[]};return s.isValid||(e||s.message.push("The password is required."),/^.{8,}$/.test(e)||s.message.push("The minimum number of characters must be 8."),/\d/.test(e)||s.message.push("The password must have at least one digit."),/[A-Z]/.test(e)||s.message.push("The password must have at least one uppercase character."),/[a-z]/.test(e)||s.message.push("The password must have at least one lowercase character.")),s},validatePasswordMatch(e,s){const a={isValid:e===s,message:[]};return a.isValid||a.message.push("Passwords do not match."),a},validateDateMonthDayYear(e){const s={isValid:/^(0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])[- /.](19|20)\d\d$/.test(e),message:[]};return s.isValid||(e||s.message.push("The date is required."),/^\d\d[- /.]\d\d[- /.]\d\d$/.test(e)&&s.message.push("Enter the complete year."),/^(\d?[- /.]\d\d|\d\d[- /.]\d?|\d?[- /.]\d?)[- /.].+$/.test(e)&&s.message.push("Enter the date in MM/DD/YYYY format.")),s},validateDateDayMonthYear(e){const s={isValid:/^(0[1-9]|[12][0-9]|3[01])[- /.](0[1-9]|1[012])[- /.](19|20)\d\d$/.test(e),message:[]};return s.isValid||(/^\d\d[- /.]\d\d[- /.]\d\d$/.test(e)&&s.message.push("Enter the complete year."),/^(\d?[- /.]\d\d|\d\d[- /.]\d?|\d?[- /.]\d?)[- /.].+$/.test(e)&&s.message.push("Enter the date in DD/MM/YYYY format.")),s},validateCardNumber(e){const s={isValid:!1,message:[],cardType:""};return e?/^4[0-9]{12}(?:[0-9]{3})?$/.test(e)?s.cardType="visa":/^5[1-5][0-9]{14}$|^2(?:2(?:2[1-9]|[3-9][0-9])|[3-6][0-9][0-9]|7(?:[01][0-9]|20))[0-9]{12}$/.test(e)?s.cardType="mastercard":/^3[47][0-9]{13}$/.test(e)?s.cardType="amex":/^65[4-9][0-9]{13}|64[4-9][0-9]{13}|6011[0-9]{12}|(622(?:12[6-9]|1[3-9][0-9]|[2-8][0-9][0-9]|9[01][0-9]|92[0-5])[0-9]{10})$/.test(e)?s.cardType="discover":/^(?:2131|1800|35[0-9]{3})[0-9]{11}$/.test(e)?s.cardType="jcb":/^3(?:0[0-5]|[68][0-9])[0-9]{11}$/.test(e)?s.cardType="diners":/^62|^81[0-9]{14}[0-9]*$/.test(e)?s.cardType="cup":s.message.push("Enter a valid credit card number."):s.message.push("The credit card number is required."),s.cardType&&(s.isValid=!0),s},validateCardCVV(e){const s={isValid:/^[0-9]{3,4}$/.test(e),message:[]};return s.isValid||s.message.push("Enter a valid CVV."),s},validatePhoneNumber(e){const s={isValid:/^\+?[0-9-.\s]{7,16}$/.test(e),message:[]};return s.isValid||(e?s.message.push("Enter a valid phone number."):s.message.push("The phone number is required.")),s}},s=document.querySelector(".needs-validation"),a=document.querySelector("input[type=email]"),t=document.querySelector("input[type=password]"),i=document.querySelectorAll("input");a.addEventListener("input",(()=>{const s=e.validateEmail(a.value),t=document.querySelector("#emailFeedback");s.isValid?(a.classList.remove("is-invalid"),a.classList.add("is-valid")):(a.classList.remove("is-valid"),a.classList.add("is-invalid"),[t.innerHTML]=s.message)})),t.addEventListener("input",(()=>{const s=e.validatePassword(t.value),a=document.querySelector("#passwordFeedback");s.isValid?(t.classList.remove("is-invalid"),t.classList.add("is-valid")):(t.classList.remove("is-valid"),t.classList.add("is-invalid"),[a.innerHTML]=s.message)})),s.addEventListener("submit",(e=>{i.forEach((s=>{s.value||(e.preventDefault(),e.stopPropagation(),s.classList.add("is-invalid"))}))}))})();